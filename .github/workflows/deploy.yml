name: Deploy Frontend to Lightsail

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      sha: ${{ github.sha }}
      region: ${{ secrets.AWS_REGION }}
      service: ${{ secrets.AWS_SERVICE_NAME }}

    steps:
      # 1. Checkout
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2. Get latest tag
      - name: Get latest tag
        id: get_tag
        run: |
          TAG=$(git describe --tags --abbrev=0)
          if [ -z "$TAG" ]; then
            echo "❌ No tag found. Please create a tag before deploying."
            exit 1
          fi
          echo "Last tag found: $TAG"

          if [ "${{ github.ref_name }}" = "main" ]; then
            DEPLOY_ENV=production
            VERSION="$TAG"
          else
            DEPLOY_ENV=develop
            CLEAN_TAG="${TAG#dev-}"
            VERSION="$CLEAN_TAG-dev"
          fi

          VERSION="${VERSION#v}"
          echo "DEPLOY_ENV=$DEPLOY_ENV" >> $GITHUB_ENV
          echo "APP_VERSION=$VERSION" >> $GITHUB_ENV

          echo "✅ DEPLOY_ENV=$DEPLOY_ENV"
          echo "✅ APP_VERSION=$VERSION"

      # 3. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 4. Install lightsailctl
      - name: Install lightsailctl
        run: |
          curl -s https://s3.us-west-2.amazonaws.com/lightsailctl/latest/linux-amd64/lightsailctl -o /usr/local/bin/lightsailctl
          sudo chmod +x /usr/local/bin/lightsailctl
          lightsailctl --version || echo "⚠️ lightsailctl no muestra versión"

      # 5. Build Docker image
      - name: Build Docker image
        run: |
          docker build \
            --build-arg VITE_AP_VERSION="${{ env.APP_VERSION }}" \
            --build-arg VITE_API_SERVICE="${{ secrets.VITE_API_SERVICE }}" \
            --build-arg VITE_FIREBASE_API_KEY="${{ secrets.VITE_FIREBASE_API_KEY }}" \
            --build-arg VITE_FIREBASE_APP_ID="${{ secrets.VITE_FIREBASE_APP_ID }}" \
            --build-arg VITE_FIREBASE_BUCKET="${{ secrets.VITE_FIREBASE_BUCKET }}" \
            --build-arg VITE_FIREBASE_DOMAIN="${{ secrets.VITE_FIREBASE_DOMAIN }}" \
            --build-arg VITE_FIREBASE_MEASURE_ID="${{ secrets.VITE_FIREBASE_MEASURE_ID }}" \
            --build-arg VITE_FIREBASE_MESSAGING_ID="${{ secrets.VITE_FIREBASE_MESSAGING_ID }}" \
            --build-arg VITE_FIREBASE_PROJECT_ID="${{ secrets.VITE_FIREBASE_PROJECT_ID }}" \
            --build-arg VITE_FIREBASE_VAPID_KEY="${{ secrets.VITE_FIREBASE_VAPID_KEY }}" \
            --build-arg VITE_IMPORT_USERS_EXCEL="${{ secrets.VITE_IMPORT_USERS_EXCEL }}" \
            --build-arg VITE_PDF_MANUAL_LINK="${{ secrets.VITE_PDF_MANUAL_LINK }}" \
            -t frontend:${{ env.sha }} .

      # 6. Debug images
      - name: Debug docker images
        run: |
          echo "🔍 Local docker images:"
          docker images | grep frontend || echo "⚠️ No frontend image found"

      # 7. Push Docker image to Lightsail
      - name: Push Docker image to Lightsail
        id: push
        run: |
          echo "🚀 Pushing frontend:${{ env.sha }} to Lightsail..."

          RAW_OUTPUT=$(aws lightsail push-container-image \
            --region ${{ env.region }} \
            --service-name ${{ env.service }} \
            --label frontend \
            --image frontend:${{ env.sha }})

          echo "🔍 Raw output:"
          echo "$RAW_OUTPUT"

          IMAGE_NAME=$(echo "$RAW_OUTPUT" | sed -n 's/.*Refer to this image as "\(.*\)" in deployments.*/\1/p')

          if [ -z "$IMAGE_NAME" ]; then
            echo "⚠️ Could not extract IMAGE_NAME"
            exit 1
          fi

          echo "✅ Image registered in Lightsail as: $IMAGE_NAME"
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      # 8. Deploy to Lightsail
      - name: Deploy to Lightsail
        run: |
          echo "🔎 Deploying image: $IMAGE_NAME"
          aws lightsail create-container-service-deployment \
            --service-name ${{ env.service }} \
            --containers "{
              \"frontend\": {
                \"image\": \"$IMAGE_NAME\",
                \"ports\": { \"80\": \"HTTP\" }
              }
            }" \
            --public-endpoint "{
              \"containerName\": \"frontend\",
              \"containerPort\": 80,
              \"healthCheck\": { \"path\": \"/\", \"intervalSeconds\": 10 }
            }"

    environment: ${{ env.DEPLOY_ENV }}
