name: Deploy Frontend to Lightsail

on:
  push:
    branches:
      - develop
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      sha: ${{ github.sha }}
      account_id: ${{ secrets.AWS_ACCOUNT_ID }}
      region: ${{ secrets.AWS_REGION }}
      repo: ${{ secrets.ECR_REPOSITORY }}
      image_tag: frontend:${{ github.sha }}

    steps:
      # 1. Checkout
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configurar AWS CLI
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3. Instalar lightsailctl (aseguramos que quede en PATH)
      - name: Install lightsailctl
        run: |
          curl -s "https://s3.amazonaws.com/amazonlightsailctl/latest/linux-amd64/lightsailctl" \
            -o lightsailctl
          chmod +x lightsailctl
          sudo mv lightsailctl /usr/local/bin/
          which lightsailctl
          lightsailctl --version || echo "lightsailctl installed"

      # 4. Build Docker image
      - name: Build Docker image
        run: |
          docker build \
            --build-arg VITE_AP_VERSION="${{ secrets.VITE_AP_VERSION }}" \
            --build-arg VITE_API_SERVICE="${{ secrets.VITE_API_SERVICE }}" \
            --build-arg VITE_FIREBASE_API_KEY="${{ secrets.VITE_FIREBASE_API_KEY }}" \
            --build-arg VITE_FIREBASE_APP_ID="${{ secrets.VITE_FIREBASE_APP_ID }}" \
            --build-arg VITE_FIREBASE_BUCKET="${{ secrets.VITE_FIREBASE_BUCKET }}" \
            --build-arg VITE_FIREBASE_DOMAIN="${{ secrets.VITE_FIREBASE_DOMAIN }}" \
            --build-arg VITE_FIREBASE_MEASURE_ID="${{ secrets.VITE_FIREBASE_MEASURE_ID }}" \
            --build-arg VITE_FIREBASE_MESSAGING_ID="${{ secrets.VITE_FIREBASE_MESSAGING_ID }}" \
            --build-arg VITE_FIREBASE_PROJECT_ID="${{ secrets.VITE_FIREBASE_PROJECT_ID }}" \
            --build-arg VITE_FIREBASE_VAPID_KEY="${{ secrets.VITE_FIREBASE_VAPID_KEY }}" \
            --build-arg VITE_IMPORT_USERS_EXCEL="${{ secrets.VITE_IMPORT_USERS_EXCEL }}" \
            --build-arg VITE_PDF_MANUAL_LINK="${{ secrets.VITE_PDF_MANUAL_LINK }}" \
            -t ${{ env.image_tag }} .

          echo "✅ Imagen Docker construida: ${{ env.image_tag }}"
          docker images

      # 5. Push de la imagen directamente a Lightsail
      - name: Push image to Lightsail
        id: push
        run: |
          echo "🚀 Subiendo imagen ${{ env.image_tag }} a Lightsail..."
          OUTPUT=$(aws lightsail push-container-image \
            --service-name ${{ secrets.AWS_SERVICE_NAME }} \
            --label frontend \
            --image ${{ env.image_tag }} \
            --output text) || { echo "❌ Error en push-container-image"; exit 1; }

          IMAGE_ARN=$(echo "$OUTPUT" | grep -oE ':[^ ]+\.frontend\.[0-9]+')
          if [ -z "$IMAGE_ARN" ]; then
            echo "❌ No se pudo obtener IMAGE_ARN. Salida de AWS CLI:"
            echo "$OUTPUT"
            exit 1
          fi

          echo "IMAGE_ARN=$IMAGE_ARN" >> $GITHUB_ENV
          echo "✅ Imagen subida a Lightsail: $IMAGE_ARN"

      # 6. Deploy en Lightsail
      - name: Deploy to Lightsail
        run: |
          echo "🚀 Usando imagen: $IMAGE_ARN"
          aws lightsail create-container-service-deployment \
            --service-name ${{ secrets.AWS_SERVICE_NAME }} \
            --containers "{
              \"frontend\": {
                \"image\": \"${IMAGE_ARN}\",
                \"ports\": { \"80\": \"HTTP\" }
              }
            }" \
            --public-endpoint "{
              \"containerName\": \"frontend\",
              \"containerPort\": 80,
              \"healthCheck\": { \"path\": \"/\", \"intervalSeconds\": 10 }
            }"
