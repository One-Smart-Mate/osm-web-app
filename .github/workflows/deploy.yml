name: Deploy Frontend to Lightsail

on:
  push:
    branches:
      - develop
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configurar AWS CLI
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3. Obtener commit short SHA
      - name: Get commit SHA
        id: vars
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # 4. Construir imagen Docker
      - name: Build Docker image
        run: |
          docker build \
            -t frontend-app:${{ env.sha }} . \
            --build-arg VITE_AP_VERSION=${{ secrets.VITE_AP_VERSION }} \
            --build-arg VITE_API_SERVICE=${{ secrets.VITE_API_SERVICE }} \
            --build-arg VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }} \
            --build-arg VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }} \
            --build-arg VITE_FIREBASE_BUCKET=${{ secrets.VITE_FIREBASE_BUCKET }} \
            --build-arg VITE_FIREBASE_DOMAIN=${{ secrets.VITE_FIREBASE_DOMAIN }} \
            --build-arg VITE_FIREBASE_MEASURE_ID=${{ secrets.VITE_FIREBASE_MEASURE_ID }} \
            --build-arg VITE_FIREBASE_MESSAGING_ID=${{ secrets.VITE_FIREBASE_MESSAGING_ID }} \
            --build-arg VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }} \
            --build-arg VITE_FIREBASE_VAPID_KEY=${{ secrets.VITE_FIREBASE_VAPID_KEY }} \
            --build-arg VITE_IMPORT_USERS_EXCEL=${{ secrets.VITE_IMPORT_USERS_EXCEL }} \
            --build-arg VITE_PDF_MANUAL_LINK=${{ secrets.VITE_PDF_MANUAL_LINK }}

      # 5. Push a Lightsail
      - name: Push Docker image to Lightsail
        run: |
          docker save frontend-app:${{ env.sha }} | aws lightsail push-container-image \
            --service-name ${{ secrets.AWS_SERVICE_NAME }} \
            --label web \
            --region ${{ secrets.AWS_REGION }} \
            --image -

      # 6. Deploy container
      - name: Deploy to Lightsail
        run: |
          aws lightsail create-container-service-deployment \
            --service-name ${{ secrets.AWS_SERVICE_NAME }} \
            --containers '{
              "frontend": {
                "image": ":'"${{ secrets.AWS_SERVICE_NAME }}.web.${{ env.sha }}"'",
                "ports": { "80": "HTTP" }
              }
            }' \
            --public-endpoint '{
              "containerName": "frontend",
              "containerPort": 80,
              "healthCheck": { "path": "/", "intervalSeconds": 10 }
            }'
